# NOTE: Using iheartradio/play-swagger

###########
# MISC:
###########
###
#  summary: Returns Anyplace Version
#  tags:
#    - Version
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.Protocol.Version'
###
GET        /api/version                                                         controllers.MainController.Version

################
# Accounts
################
# TODO:NN for each endpoint: add in swagger-js
# TODO:NN add usages... renamed stuff.. etc..
# TODO: other API.... local..
# /user/login/google (move from MappingController to: AnyplaceAccounts (AnypalceAccounts->Accounts)
# CHECK:NN (CLR if needed)
#  /login/google/anyplace_token generate and return anyplaceToken (in order to replace old token)

### NoDocs ###
POST        /api/user/google/sign                                               controllers.MappingController.addAccount()

###
#  summary: Registers a local user
#  tags:
#    - User
###
POST        /api/user/register                                                  controllers.UserController.register()

###
#  summary: Logins a local user
#  tags:
#    - User
###
POST        /api/user/login                                                     controllers.UserController.login()

###
#  summary: Retrieves all user accounts
#  notes: Only for the admin/moderators.
#  tags:
#    - User
######
POST        /api/user/auth/admin/accounts_all                                   controllers.Admin.fetchAllAccounts()

### NoDocs ###
POST        /api/user/auth/admin/migration/run                                  controllers.Admin.migrateToMongoDB()

# POST         /user/logout                                                  controllers.UserController.logout()
# ADMIN

################
# Spaces
################
POST        /api/auth/mapping/space/add                                         controllers.MappingController.spaceAdd()
POST        /api/auth/mapping/space/update                                      controllers.MappingController.spaceUpdate()
# TODO:NN verified all except fingerprints: must also delete radiomaps_frozen
POST        /api/auth/mapping/space/delete                                      controllers.MappingController.spaceDelete()
POST        /api/mapping/space/all                                              controllers.MappingController.spaceAll()
POST        /api/auth/mapping/space/all_owner                                   controllers.MappingController.spaceAllByOwner()
POST        /api/auth/mapping/space/coordinates                                 controllers.MappingController.spaceCoordinates()
POST        /api/mapping/space/get                                              controllers.MappingController.spaceGetOne()

# Spaces: POIs
POST        /api/auth/mapping/pois/add                                          controllers.MappingController.poisAdd()
POST        /api/auth/mapping/pois/delete                                       controllers.MappingController.poisDelete()
POST        /api/auth/mapping/pois/update                                       controllers.MappingController.poisUpdate()
POST        /api/mapping/pois/all_floor                                         controllers.MappingController.poisByFloor()
POST        /api/mapping/pois/all_building                                      controllers.MappingController.poisByBuid()
# RENAMED: all_pois -> search
POST        /api/mapping/pois/search                                            controllers.MappingController.searchPois()

# Spaces: Connections
POST        /api/auth/mapping/connection/add                                    controllers.MappingController.connectionAdd()
POST        /api/auth/mapping/connection/delete                                 controllers.MappingController.connectionDelete()
POST        /api/mapping/connection/all_floor                                   controllers.MappingController.connectionsByFloor()
POST        /api/mapping/connection/all_floors                                  controllers.MappingController.connectionsByallFloors()

POST        /api/auth/mapping/campus/all_owner                                  controllers.MappingController.buildingsetAllByOwner()
