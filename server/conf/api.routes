# NOTE: This file uses github.com/iheartradio/play-swagger to automatically create the API documentation.


################
# MISC
################

###
#  summary: Returns Anyplace Version
#  tags:
#    - Misc
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/Version'
###
GET        /api/version                                                         controllers.MainController.getVersion


###
#      tags:
#        - User
#      summary: Adds a new user
#      description: |-
#        Registers a local user.
#
#
#        One could use an external account (Google) to use the service.
#        For those see endpoint XXX.
#      operationId: userRegister
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Name and Surname
#          required: true
#          schema:
#            $ref: '#/definitions/UserRegister'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/user/register                                                  controllers.UserController.register()

###
#  summary: Logins a local user
#  tags:
#    - User
#  parameters: [
#   {
#       "in": "body",
#       "name": "Body",
#       "description": "Name and Surname",
#       "required": true,
#       "schema": {
#           "$ref": "#/definitions/UserLogin"
#       }
#   }
#  ]
#  responses:
#   200:
#     description: success
###
POST        /api/user/login                                                     controllers.UserController.login()

################
# Spaces
################

###
#      tags:
#        - Space
#      summary: Get all spaces
#      description: ""
#      operationId: spaceAll
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            type: object
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/space/all                                              controllers.MappingController.spaceAll()

###
#      tags:
#        - Space
#      summary: Get a space
#      description: "Based on the buid retrieve a space."
#      operationId: spaceGet
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/Buid'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/space/get                                              controllers.MappingController.spaceGetOne()

###
#      tags:
#        - Space
#      summary: Add a space
#      description: ""
#      operationId: addSpace
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/SpaceAdd'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/space/add                                         controllers.MappingController.spaceAdd()

###
#      tags:
#        - Space
#      summary: Update a space
#      description: "Provide the new fields that you wish to update."
#      operationId: updateSpace
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/SpaceUpdate'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/space/update                                      controllers.MappingController.spaceUpdate()

# TODO:NN verified all except fingerprints: must also delete radiomaps_frozen

###
#      tags:
#        - Space
#      summary: Delete a Space
#      description: "Provide the buid and your access token."
#      operationId: deleteSpace
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/SpaceDelete'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/space/delete                                      controllers.MappingController.spaceDelete()

###
#      tags:
#        - Space
#      summary: Get user spaces
#      description: "Based on user's `owner_id` all the spaces are retrieved."
#      operationId: spaceAllOwner
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            type: object
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/space/user                                   controllers.MappingController.spaceAllByOwner()

###
#      tags:
#        - Space
#      summary: Get near-by spaces
#      description: |
#       Returns spaces near to the given coordinates.
#       `range` is in meters and is optional. If not given it uses a default range of `50`.
#       The maximum range is `500`.
#      operationId: spaceCoords
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/SpaceCoords'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/space/coordinates                                 controllers.MappingController.spaceCoordinates()

# Floors

###
#      tags:
#        - Space:Floor
#      summary: Get all floors
#      description: ""
#      operationId: floorAll
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/SpaceAll'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/floor/all                                              controllers.MappingController.floorAll()

###
#      tags:
#        - Space:Floor
#      summary: Add floor
#      description: ""
#      operationId: floorAdd
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Floor description
#          required: true
#          schema:
#            $ref: '#/definitions/FloorAdd'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/floor/add                                         controllers.MappingController.floorAdd()

###
#      tags:
#        - Space:Floor
#      summary: Delete floor
#      description: ""
#      operationId: floorDelete
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Floor description
#          required: true
#          schema:
#            $ref: '#/definitions/FloorDelete'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/floor/delete                                      controllers.MappingController.floorDelete()

# CHECK:PM ASK:DZ is setting floorplan description obsolete?

### NoDocs ###
POST        /api/mapping/floor/uploadWithZoom                                   controllers.MappingController.floorPlanUploadWithZoom()

# Campus

###
#      tags:
#        - Space:Campus
#      summary: Get all Campuses
#      description: ""
#      operationId: campusAll
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Campus description
#          required: true
#          schema:
#            $ref: '#/definitions/CampusAll'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/campus/all_cucode                                      controllers.MappingController.buildingSetAll()

###
#      tags:
#        - Space:Campus
#      summary: Add Campus
#      description: ""
#      operationId: campusAdd
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Campus description
#          required: true
#          schema:
#            $ref: '#/definitions/CampusAdd'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/campus/add                                        controllers.MappingController.buildingSetAdd()

# CHECK:NN CHECK:PM on frontend(js) buildings and greeklish are not set in the form

###
#      tags:
#        - Space:Campus
#      summary: Update Campus
#      description: ""
#      operationId: campusUpdate
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Campus description
#          required: true
#          schema:
#            $ref: '#/definitions/CampusUpdate'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/campus/update                                     controllers.MappingController.campusUpdate()

###
#      tags:
#        - Space:Campus
#      summary: Delete Campus
#      description: ""
#      operationId: campusDelete
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Campus description
#          required: true
#          schema:
#            $ref: '#/definitions/CampusDelete'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/campus/delete                                     controllers.MappingController.campusDelete()

###
#      tags:
#        - Space:Campus
#      summary: Get user's Campus
#      description: ""
#      operationId: campusUser
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Campus description
#          required: true
#          schema:
#            type: object
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/campus/user                                       controllers.MappingController.buildingsetAllByOwner()

###
#      tags:
#        - Space:POIs
#      summary: Get POIs of a floor
#      description: "Provide buid and floor in order to retrieve all POIs of that floor"
#      operationId: poisAllFloor
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/FloorAll'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/pois/all_floor                                         controllers.MappingController.poisByFloor()

###
#      tags:
#        - Space:POIs
#      summary: Get POIs of a space
#      description: "Provide buid in order to retrieve all POIs of that Space"
#      operationId: poisAllBuilding
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            type: object
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/pois/all_building                                      controllers.MappingController.poisByBuid()

# RENAMED: all_pois -> search

###
#      tags:
#        - Space:POIs
#      summary: Search for POIs
#      description: "Provide cuid and buid to retrieve POIs based on letters. Supports greeklish search."
#      operationId: poisSearch
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/PoisSearch'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/pois/search                                            controllers.MappingController.searchPois()

###
#      tags:
#        - Space:POIs
#      summary: Add a POI
#      description: "Provide required fields in orded to add a POI in a specific floor, inside a space"
#      operationId: poisAdd
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/PoisAdd'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/pois/add                                          controllers.MappingController.poisAdd()

###
#      tags:
#        - Space:POIs
#      summary: Delete a POI
#      description: "Provide buid and puid in order to delete a POI"
#      operationId: poisDelete
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/PoisDelete'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/pois/delete                                       controllers.MappingController.poisDelete()

###
#      tags:
#        - Space:POIs
#      summary: Update a POI
#      description: "Provide the new fields that you wish to update"
#      operationId: poisUpdate
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/PoisUpdate'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/pois/update                                       controllers.MappingController.poisUpdate()

# Spaces: Connections

###
#      tags:
#        - Space:Connection
#      summary: Retrieve all connections of a floor
#      description: "Provide buid and floor in order to retrieve all connections of that floor"
#      operationId: conAllFloor
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/FloorAll'
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/connection/all_floor                                   controllers.MappingController.connectionsByFloor()

###
#      tags:
#        - Space:Connection
#      summary: Retrieve all connections of a space
#      description: "Provide buid in order to retrieve all connections of that space"
#      operationId: conAllFloors
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            type: object
#      responses:
#        '200':
#          description: Successful operation
###
POST        /api/mapping/connection/all_floors                                  controllers.MappingController.connectionsByallFloors()

###
#      tags:
#        - Space:Connection
#      summary: Add a connection
#      description: "Provide information for two POIs in order to add a connection."
#      operationId: conAdd
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/ConnectionAdd'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/connection/add                                    controllers.MappingController.connectionAdd()

###
#      tags:
#        - Space:Connection
#      summary: Delete a connection
#      description: "Provide information about the connection you wish to delete"
#      operationId: conDelete
#      consumes:
#        - application/json
#      produces:
#        - application/json
#      parameters:
#        - in: body
#          name: Body
#          description: Space description
#          required: true
#          schema:
#            $ref: '#/definitions/ConnectionDelete'
#      responses:
#        '200':
#          description: Successful operation
#      security:
#      - api_key: []
###
POST        /api/auth/mapping/connection/delete                                 controllers.MappingController.connectionDelete()


# USED BY: Web apps

### NoDocs ###
POST        /api/floorplans64/:buid/:floor_number                               controllers.MappingController.serveFloorPlanBase64( buid: String, floor_number: String )
### NoDocs ###
POST        /api/floorplans64all/:buid/:floor_number                            controllers.MappingController.serveFloorPlanBase64all( buid: String, floor_number: String )